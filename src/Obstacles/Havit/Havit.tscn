[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/Terrain/Obstacles/Havit/Havit.png" type="Texture" id=1]
[ext_resource path="res://src/Obstacles/Havit/Havit.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float outline_width = 2.0;
uniform vec4 outline_color: hint_color;

void fragment() {
	vec4 col = texture(TEXTURE, UV);
	vec2 ps = TEXTURE_PIXEL_SIZE;
	float a;
	float maxa = col.a;
	float mina = col.a;

	a = texture(TEXTURE, UV + vec2(0.0, -outline_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(0.0, outline_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(-outline_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(outline_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	COLOR = mix(col, outline_color, maxa - mina);
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/outline_width = 0.0
shader_param/outline_color = Color( 0.89, 0.4717, 0.478672, 1 )

[sub_resource type="CapsuleShape2D" id=4]
radius = 35.9041

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 30.5223, 28.1398 )

[node name="Node2D" type="Node2D"]

[node name="KinematicBody2D" type="KinematicBody2D" parent="."]
script = ExtResource( 2 )

[node name="Area2D" type="Area2D" parent="KinematicBody2D"]

[node name="Sprite" type="Sprite" parent="KinematicBody2D/Area2D"]
material = SubResource( 2 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="KinematicBody2D/Area2D"]
position = Vector2( -1.76056, -3.36144 )
shape = SubResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="KinematicBody2D"]
position = Vector2( -2.15775, 29.6073 )
shape = SubResource( 3 )
[connection signal="input_event" from="KinematicBody2D/Area2D" to="KinematicBody2D" method="_on_Area2D_input_event"]
[connection signal="mouse_entered" from="KinematicBody2D/Area2D" to="KinematicBody2D" method="_on_Area2D_mouse_entered"]
[connection signal="mouse_exited" from="KinematicBody2D/Area2D" to="KinematicBody2D" method="_on_Area2D_mouse_exited"]
